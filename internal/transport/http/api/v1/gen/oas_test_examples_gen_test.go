// Code generated by ogen, DO NOT EDIT.

package v1

import (
	"github.com/go-faster/jx"

	std "encoding/json"
	"testing"

	"github.com/stretchr/testify/require"
)

func TestErrorResponse_EncodeDecode(t *testing.T) {
	var typ ErrorResponse
	typ.SetFake()

	e := jx.Encoder{}
	typ.Encode(&e)
	data := e.Bytes()
	require.True(t, std.Valid(data), "Encoded: %s", data)

	var typ2 ErrorResponse
	require.NoError(t, typ2.Decode(jx.DecodeBytes(data)))
}
func TestUploadStatus_EncodeDecode(t *testing.T) {
	var typ UploadStatus
	typ.SetFake()

	e := jx.Encoder{}
	typ.Encode(&e)
	data := e.Bytes()
	require.True(t, std.Valid(data), "Encoded: %s", data)

	var typ2 UploadStatus
	require.NoError(t, typ2.Decode(jx.DecodeBytes(data)))
}
func TestUploadStatusStatus_EncodeDecode(t *testing.T) {
	var typ UploadStatusStatus
	typ.SetFake()

	e := jx.Encoder{}
	typ.Encode(&e)
	data := e.Bytes()
	require.True(t, std.Valid(data), "Encoded: %s", data)

	var typ2 UploadStatusStatus
	require.NoError(t, typ2.Decode(jx.DecodeBytes(data)))
}
